{"count":20,"start":0,"total":8,"collections":[{"status":"wish","updated":"2015-06-10 21:20:20","user_id":"129154019","tags":["javascript","MyWish"],"book":{"rating":{"max":10,"numRaters":119,"average":"8.8","min":0},"subtitle":"","author":["Nicholas C. Zakas"],"pubdate":"2010-4-2","tags":[{"count":129,"name":"javascript","title":"javascript"},{"count":41,"name":"performance","title":"performance"},{"count":33,"name":"JavaScript","title":"JavaScript"},{"count":28,"name":"web开发","title":"web开发"},{"count":21,"name":"前端开发","title":"前端开发"},{"count":18,"name":"web","title":"web"},{"count":17,"name":"O'Reilly","title":"O'Reilly"},{"count":17,"name":"编程","title":"编程"}],"origin_title":"","image":"http:\/\/img3.douban.com\/mpic\/s4533864.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"242","images":{"small":"http:\/\/img3.douban.com\/spic\/s4533864.jpg","large":"http:\/\/img3.douban.com\/lpic\/s4533864.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s4533864.jpg"},"alt":"http:\/\/book.douban.com\/subject\/4183808\/","id":"4183808","publisher":"O'Reilly Media","isbn10":"059680279X","isbn13":"9780596802790","title":"High Performance JavaScript","url":"http:\/\/api.douban.com\/v2\/book\/4183808","alt_title":"","author_intro":"","summary":"If you're like most developers, you rely heavily on JavaScript to build interactive and quick-responding web applications. The problem is that all of those lines of JavaScript code can slow down your apps. This book reveals techniques and strategies to help you eliminate performance bottlenecks during development. You'll learn how to improve execution time, downloading, interaction with the DOM, page life cycle, and more. Yahoo! frontend engineer Nicholas C. Zakas and five other JavaScript experts -- Ross Harmes, Julien Lecomte, Steven Levithan, Stoyan Stefanov, and Matt Sweeney -- demonstrate optimal ways to load code onto a page, and offer programming tips to help your JavaScript run as efficiently and quickly as possible. You'll learn the best practices to build and deploy your files to a production environment, and tools that can help you find problems once your site goes live. * Identify problem code and use faster alternatives to accomplish the same task * Improve scripts by learning how JavaScript stores and accesses data * Implement JavaScript code so that it doesn't slow down interaction with the DOM * Use optimization techniques to improve runtime performance * Learn ways to ensure the UI is responsive at all times * Achieve faster client-server communication * Use a build system to minify files, and HTTP compression to deliver them to the browser","price":"USD 34.99"},"book_id":"4183808","id":930324983},{"status":"wish","updated":"2015-06-10 21:03:45","user_id":"129154019","tags":["MyWish","javascript"],"book":{"rating":{"max":10,"numRaters":364,"average":"8.6","min":0},"subtitle":"","author":["Peter-Paul Koch"],"pubdate":"2008-4","tags":[{"count":411,"name":"javascript","title":"javascript"},{"count":92,"name":"Web","title":"Web"},{"count":82,"name":"JavaScript","title":"JavaScript"},{"count":70,"name":"ppk","title":"ppk"},{"count":48,"name":"编程","title":"编程"},{"count":45,"name":"PPK谈JavaScript","title":"PPK谈JavaScript"},{"count":36,"name":"计算机","title":"计算机"},{"count":28,"name":"网页设计","title":"网页设计"}],"origin_title":"PPK on JavaScript","image":"http:\/\/img4.douban.com\/mpic\/s2984236.jpg","binding":"","translator":["淘宝UED"],"catalog":"第1章　目标\na 概念回顾\n在浏览器中处理交互\n胖与瘦\njavascript的目标\nb 技术概览\n标准化\n版本\n安全\nc javascript的历史\n错误的开始\n事实标准\ncss变革\n新的开始\n下一步\n第2章　大背景\na css变革\n无侵入脚本编程\n三个层\n分离关注点\nb 表现与结构的分离\ncss修改\n更改结构还是表现\nc 行为与结构的分离\n独立文件中的函数\n从html中移除事件处理程序\nd 行为和表现的分离\n下拉菜单：hover或mouseover\/mouseout\n相同的效果与相似的效果\ne 可访问性概览\n什么是可访问性\n无脚本\n没有鼠标\n屏幕阅读器\n屏幕阅读器和事件\n可访问性和可用性\nf 可访问性规则\n条理分明的html\n产生对脚本用户有意义的内容\n重定向用户\n键盘用户\n[ noscript ]标签\ng 范例脚本\n限长的文本输入区\n易用的表单\n表单验证\n下拉菜单\n编辑样式表\n三明治拾取器\nxmlhttp测速计\n站点调查\n第3章　浏览器\na 浏览器\nmozilla家族\nwindows的explorer\nsafari\nopera\n其他图形桌面浏览器\n移动电话\n屏幕阅读器\nb 兼容性问题\n问题\n解决方案\nc 对象检测\n对象检测是如何工作的\n我们该走多远\nd 浏览器检测\n为什么浏览器检测行不通\n浏览器检测的军备竞赛\n拆解浏览器字符串\n浏览器检测的正确使用\ne 调试\n错误消息\n处理浏览器的bug\n范例\n报告浏览器bug\n第4章　准备\n第5章　核心\n第6章　bom\n第7章　事件\n第8章　dom\n第9章　css修改\n第10章　数据检索\n后记","pages":"337","images":{"small":"http:\/\/img4.douban.com\/spic\/s2984236.jpg","large":"http:\/\/img4.douban.com\/lpic\/s2984236.jpg","medium":"http:\/\/img4.douban.com\/mpic\/s2984236.jpg"},"alt":"http:\/\/book.douban.com\/subject\/3022779\/","id":"3022779","publisher":"人民邮电出版社","isbn10":"7115175454","isbn13":"9787115175458","title":"ppk谈JavaScript","url":"http:\/\/api.douban.com\/v2\/book\/3022779","alt_title":"PPK on JavaScript","author_intro":"Peter-Paul Koch（即ppk)是自学成才的世界级JavaScript专家，1970年生于荷兰阿姆斯特丹，大学主修古希腊罗马史专业。他拥有多年客户端web开发经验，所维护的网站www.quirksmode.org已成为全球JavaScript开发人员最重要的参考资源之一。他常年为业界顶尖的媒体 Digital Web Magazine、A List Apart等撰写技术文章，包括影响深远的The JavaScript Manifesto。","summary":"本书全方位介绍了JavaScript，主要讨论了浏览器兼容性、可访问性、底层语法以及与HTML结构层的协同等问题。书中既包括理论性的讲解，又给出了相关的示例脚本以进行进一步阐述。通过8个真实项目示例，介绍了JavaScript核心语言、BOM、事件处理、DOM、修改CSS样式表以及数据检索等内容。\n本书适合具有一定网页开发经验的Web开发人员阅读。","series":{"id":"660","title":"图灵程序设计丛书"},"price":"59.00元"},"book_id":"3022779","id":930320067},{"status":"wish","updated":"2015-06-10 21:03:20","user_id":"129154019","tags":["JavaScript","MyWish"],"book":{"rating":{"max":10,"numRaters":80,"average":"8.0","min":0},"subtitle":"","author":["Marijn Haverbeke"],"pubdate":"2012-10-1","tags":[{"count":175,"name":"JavaScript","title":"JavaScript"},{"count":50,"name":"编程","title":"编程"},{"count":28,"name":"计算机","title":"计算机"},{"count":27,"name":"前端开发","title":"前端开发"},{"count":18,"name":"javascript","title":"javascript"},{"count":18,"name":"前端","title":"前端"},{"count":16,"name":"web","title":"web"},{"count":15,"name":"Web前端开发","title":"Web前端开发"}],"origin_title":"Eloquent JavaScript: A Modern Introduction to Programming","image":"http:\/\/img3.douban.com\/mpic\/s11431224.jpg","binding":"","translator":["徐涛"],"catalog":"对本书的赞誉\n译者序\n前言\n第1章　JavaScript基础：值、变量、控制流程\t1\n1.1   值1\n1.1.1   数字1\n1.1.2　算术2\n1.1.3　字符串3\n1.1.4　一元操作符3\n1.1.5　布尔值、比较和布尔逻辑4\n1.1.6　表达式与语句5\n1.2   变量5\n1.3   环境7\n1.3.1   函数7\n1.3.2　prompt和confirm7\n1.3.3　print函数8\n1.3.4　修改环境8\n1.4　程序结构8\n1.4.1　条件执行9\n1.4.2　while循环与do循环9\n1.4.3　缩进代码11\n1.4.4　for循环11\n1.4.5　跳出循环12\n1.4.6　更新变量简便法12\n1.4.7　使用switch进行调度12\n1.4.8　大小写13\n1.4.9　注释13\n1.5　进一步认识类型14\n1.5.1　Undefined值14\n1.5.2　自动类型转换14\n1.5.3　自动类型转换的风险15\n1.5.4　进一步了解&&和||16\n第2章　函数17\n2.1　剖析函数定义17\n2.1.1　定义顺序18\n2.1.2　局部变量18\n2.1.3　嵌套作用域19\n2.1.4　栈20\n2.1.5　函数值20\n2.1.6　闭包21\n2.1.7　可选参数21\n2.2　技巧22\n2.2.1　避免重复22\n2.2.2　纯函数23\n2.2.3　递归24\n第3章　数据结构：对象与数组27\n3.1　问题：Emily姨妈家的猫27\n3.2　基本数据结构28\n3.2.1　属性28\n3.2.2　对象值29\n3.2.3　对象即集合30\n3.2.4　易变性30\n3.2.5　对象即集合：数组31\n3.2.6　方法32\n3.3　解决关于Emily姨妈家猫的问题33\n3.3.1　分离段落33\n3.3.2　找出相关段落34\n3.3.3　提取猫的名字35\n3.3.4　完整算法35\n3.3.5　清理代码36\n3.3.6　日期表示38\n3.3.7　日期提取39\n3.3.8　收集更多信息40\n3.3.9　数据表示41\n3.4　更多理论42\n3.4.1　arguments对象42\n3.4.2　完成扫尾工作44\n3.4.3　Math对象44\n3.4.4　可枚举属性44\n第4章　错误处理47\n4.1　问题类型47\n4.1.1　程序员错误47\n4.1.2　运行时错误48\n4.2　处理错误48\n4.2.1　返回特殊值48\n4.2.2　异常49\n4.2.3　异常之后的错误清除50\n4.2.4　Error对象51\n4.2.5　未处理的异常51\n4.2.6　选择性Catch51\n4.3　自动化测试52\n第5章　函数式编程55\n5.1　抽象55\n5.2　高阶函数56\n5.2.1　修改函数57\n5.2.2　归约函数58\n5.2.3　映射数组59\n5.3　隐士的悲惨故事59\n5.3.1　HTML60\n5.3.2　隐士的文本文件61\n5.3.3　找出段落64\n5.3.4　强调与脚注64\n5.3.5　移动脚注67\n5.3.6　生成HTML67\n5.3.7　转化隐士的书70\n5.4　其他函数技巧71\n5.4.1　操作符函数71\n5.4.2　分布应用72\n5.4.3　组合73\n第6章　面向对象编程75\n6.1　对象75\n6.1.1　定义方法75\n6.1.2　构造函数76\n6.1.3　从原型中构建77\n6.1.4　构造函数与原型77\n6.1.5　原型污染79\n6.1.6　对象即词典80\n6.1.7　指定接口81\n6.2　构建生态系统模拟82\n6.2.1　定义生态圈82\n6.2.2　空间里的点83\n6.2.3　呈现网格83\n6.2.4　昆虫的编程接口85\n6.2.5　生态圈对象86\n6.2.6　this及其作用域87\n6.2.7　有活力的生命88\n6.2.8　昆虫移动90\n6.2.9　更多生命形式90\n6.2.10　多态性93\n6.3　更逼真的模拟生态系统93\n6.3.1　继承93\n6.3.2　记录能量94\n6.3.3　添加植物96\n6.3.4　食草动物97\n6.3.5　为它带来生命97\n6.3.6　人工愚蠢99\n6.4　原型继承100\n6.4.1　类型定义工具100\n6.4.2　类型原型101\n6.4.3　对象的世界102\n6.4.4　instanceof操作符103\n6.4.5　混合类型104\n第7章　模块化107\n7.1　模块107\n7.1.1　生态圈例子107\n7.1.2 　模块文件化108\n7.2　模块的形态108\n7.2.1　函数作为局部命名空间109\n7.2.2　模块对象110\n7.3　接口设计111\n7.3.1　可预见性111\n7.3.2　可组合性111\n7.3.3　分层接口112\n7.3.4　参数对象112\n7.4　JS库113\n第8章　正则表达式115\n8.1　语法115\n8.1.1　匹配字符集115\n8.1.2　匹配单词和字符边界116\n8.1.3　重复模式117\n8.1.4　子表达式分组117\n8.1.5　多选一117\n8.2　匹配与替换118\n8.2.1　匹配方法118\n8.2.2　正则表达式和替换方法118\n8.2.3　动态创建RegExp 对象120\n8.3　解析.ini文件121\n8.4　结论123\n第9章　Web编程：速成课125\n9.1　互联网125\n9.1.1　URL网址125\n9.1.2　服务器端编程126\n9.1.3　客户端编程126\n9.2 　Web脚本基础知识126\n9.2.1　windows对象126\n9.2.2　document对象127\n9.2.3　计时器128\n9.2.4　表单128\n9.2.5　表单脚本化130\n9.2.6　自动焦点132\n9.3　浏览器非兼容性132\n9.4　延伸阅读133\n第10章　文档对象模型135\n10.1　DOM元素135\n10.1.1　节点链接136\n10.1.2　节点类型136\n10.1.3　innerHTML属性137\n10.1.4　查找节点137\n10.1.5　创建节点138\n10.1.6　节点创建辅助函数138\n10.1.7　移动节点139\n10.1.8　print实现140\n10.2　样式表140\n10.2.1　样式属性141\n10.2.2　隐藏节点141\n10.2.3　定位141\n10.2.4　控制节点大小142\n10.3　警示语142\n第11章　浏览器事件143\n11.1　事件句柄143\n11.1.1　注册事件句柄143\n11.1.2　事件对象145\n11.1.3　鼠标相关事件类型145\n11.1.4　键盘事件146\n11.1.5　停止事件147\n11.1.6　事件对象正规化147\n11.1.7　跟踪焦点148\n11.1.8　表单事件148\n11.1.9　window事件149\n11.2　示例：实现推箱子149\n11.2.1　等级输入格式149\n11.2.2　程序设计150\n11.2.3　游戏板展示150\n11.2.4 　控制器对象153\n第12章　HTTP请求157\n12.1　HTTP协议157\n12.2　XMLHttpRequest API158\n12.2.1　创建请求对象158\n12.2.2　简单的请求158\n12.2.3　发送异步请求159\n12.2.4　获取XML数据160\n12.2.5　读取JSON数据161\n12.2.6 　基本的请求包装161\n12.3　学习HTTP162","pages":"176","images":{"small":"http:\/\/img3.douban.com\/spic\/s11431224.jpg","large":"http:\/\/img3.douban.com\/lpic\/s11431224.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s11431224.jpg"},"alt":"http:\/\/book.douban.com\/subject\/19933548\/","id":"19933548","publisher":"机械工业出版社华章公司","isbn10":"7111396650","isbn13":"9787111396659","title":"JavaScript编程精解","url":"http:\/\/api.douban.com\/v2\/book\/19933548","alt_title":"Eloquent JavaScript: A Modern Introduction to Programming","author_intro":"作者简介：\nMarijn Haverbeke　世界级JavaScript程序员，通晓多种编程语言，在Web开发方面积累了丰富的经验，在JavaScript领域颇有影响力。如今，他专注于动态语言下的数据库系统的研究和Web API的设计。此外，他创建并维护着多个流行的开源项目。\n译者简介：\n徐涛（网名：汤姆大叔），微软最有价值专家（MVP）、项目经理、软件架构师，擅长大型互联网产品的架构与设计，崇尚敏捷开发模式，熟悉设计模式、前端技术以及各种开源产品，曾获MCP、MCSE、MCDBA、MCTS、MCITP、MCPD、PMP认证。\n博客地址：http:\/\/www.cnblogs.com\/TomXu","summary":"如果你只想阅读一本关于JavaScript的图书，那么本书应该是你的首选。本书由世界级JavaScript程序员撰写，JavaScript之父和多位JavaScript专家鼎力推荐。本书适合作为系统学习JavaScript的参考书，它在写作思路上几乎与现有的所有同类书都不同，打破常规，将编程原理与运用规则完美地结合在一起，而且将所有知识点与一个又一个经典的编程故事融合在一起，读者可以在轻松的游戏式开发中学会JavaScript程序设计，趣味性十足，可操作性极强。\n全书一共12章：第1~3章介绍了JavaScript的基本语法，旨在帮助读者编写出正确的JavaScript程序，包含数字、算术、字符串、变量、程序结构、控制流程、类型、函数、对象和数组等最基础和最核心的内容；第4~7章讲解了JavaScript编程中的高级技术，目的是帮助读者编写更复杂的JavaScript程序，主要涉及错误处理、函数式编程、面向对象编程、模块化等重要内容；第8~12章则将重心转移到JavaScript环境中可用的工具上，分别详细讲解了正则表达式、与Web编程相关的知识、文档对象模型、浏览器事件和HTTP请求等。","series":{"id":"12919","title":"华章程序员书库"},"price":"49.00元"},"book_id":"19933548","id":930319956},{"status":"wish","updated":"2015-06-10 20:47:45","user_id":"129154019","tags":["Javascript","MyWish"],"book":{"rating":{"max":10,"numRaters":5,"average":"0.0","min":0},"subtitle":"","author":["Stoyan Stefanov","Kumar Chetan Sharma"],"pubdate":"2013-7-26","tags":[{"count":6,"name":"Javascript","title":"Javascript"},{"count":3,"name":"OOP","title":"OOP"},{"count":2,"name":"js","title":"js"},{"count":2,"name":"有电子版","title":"有电子版"},{"count":1,"name":"JavaScript","title":"JavaScript"},{"count":1,"name":"MyWish","title":"MyWish"},{"count":1,"name":"编程","title":"编程"}],"origin_title":"","image":"http:\/\/img4.douban.com\/mpic\/s27048268.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"382","images":{"small":"http:\/\/img4.douban.com\/spic\/s27048268.jpg","large":"http:\/\/img4.douban.com\/lpic\/s27048268.jpg","medium":"http:\/\/img4.douban.com\/mpic\/s27048268.jpg"},"alt":"http:\/\/book.douban.com\/subject\/24835411\/","id":"24835411","publisher":"Packt Publishing","isbn10":"1849693129","isbn13":"9781849693127","title":"Object-Oriented JavaScript, 2nd Edition","url":"http:\/\/api.douban.com\/v2\/book\/24835411","alt_title":"","author_intro":"","summary":"","price":"USD 49.99"},"book_id":"24835411","id":930314884},{"status":"wish","updated":"2015-06-10 20:46:29","user_id":"129154019","tags":["javascript","web","MyWish"],"book":{"rating":{"max":10,"numRaters":49,"average":"9.1","min":0},"subtitle":"The Good Parts","author":["克罗克福特"],"pubdate":"2009-1","tags":[{"count":63,"name":"javascript","title":"javascript"},{"count":32,"name":"编程","title":"编程"},{"count":21,"name":"web","title":"web"},{"count":16,"name":"programming","title":"programming"},{"count":15,"name":"技术","title":"技术"},{"count":14,"name":"JavaScript","title":"JavaScript"},{"count":10,"name":"程序设计","title":"程序设计"},{"count":8,"name":"js","title":"js"}],"origin_title":"","image":"http:\/\/img3.douban.com\/mpic\/s3400022.jpg","binding":"平装","translator":[],"catalog":"","pages":"153","images":{"small":"http:\/\/img3.douban.com\/spic\/s3400022.jpg","large":"http:\/\/img3.douban.com\/lpic\/s3400022.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s3400022.jpg"},"alt":"http:\/\/book.douban.com\/subject\/3332698\/","id":"3332698","publisher":"东南大学出版社","isbn10":"7564114479","isbn13":"9787564114473","title":"JavaScript","url":"http:\/\/api.douban.com\/v2\/book\/3332698","alt_title":"","author_intro":"","summary":"《JavaScript:The Good Parts(影印版)》一书中，Crockford深度分析了一堆好的意图和盲目的错误，为你提供了所有JavaScript的地道优良部分的细节，包括：·语法·继承·方法；·对象·数组·风格；·函数·正则表达式·美丽的特性大多数编程语言包含优良和拙劣的部件，但对JavaScript而言后者的比重较大，因为它在匆忙中开发和发布，还没能够得到精炼。这本权威的书剔除了大多数可怕的JavaScript特性，展现了JavaScript的另一部分，这一部分比JavaScript语言作为一个整体更加稳定、更具有可读性以及可维护性——可以用这个部分创建真正可展的合高效的代码。\n作者Douglas Crockford(他被很多开发社区认为是JavaScript专家)提出了足够多的好想法，让JavaScript成为一个杰出的面向对象编程语言。不幸的是，这些好想法(比如函数、弱类型、动态对象和表达能力很强的对象文字注释)被掺杂了些坏想法(比如基于全局变量的编程模型)。\n当Java Applet陨落的时候，JavaScript成为了Web编程的缺省语言，但它的流行程度跟它作为一个编程语言的质量完全没有关系。","price":"28.00元"},"book_id":"3332698","id":930314445},{"status":"wish","updated":"2015-06-09 21:09:18","user_id":"129154019","tags":["MyWish","AngularJS","编程"],"book":{"rating":{"max":10,"numRaters":182,"average":"7.3","min":0},"subtitle":"","author":["格林 (Green.B.)","夏德瑞 (Seshadri.S.)"],"pubdate":"2013-10-1","tags":[{"count":177,"name":"AngularJS","title":"AngularJS"},{"count":82,"name":"javascript","title":"javascript"},{"count":67,"name":"JavaScript","title":"JavaScript"},{"count":60,"name":"前端","title":"前端"},{"count":49,"name":"前端开发","title":"前端开发"},{"count":40,"name":"Web","title":"Web"},{"count":29,"name":"计算机","title":"计算机"},{"count":28,"name":"编程","title":"编程"}],"origin_title":"AngularJS","image":"http:\/\/img3.douban.com\/mpic\/s28011614.jpg","binding":"平装","translator":["大漠穷秋"],"catalog":"前言 ............................................................................. vii\n第1 章 AngularJS 简介 ................................................. 1\n一些概念 ............................................................................................................... 2\n客户端模板 .................................................................................................... 2\nModel View Controller（MVC） ..................................................................... 3\n数据绑定 ........................................................................................................ 4\n依赖注入 ........................................................................................................ 5\n指令 ................................................................................................................ 6\n实例：购物车 ....................................................................................................... 6\n接下来 ................................................................................................................... 9\n第2 章 AngularJS 应用骨架 .........................................11\n调用Angular ....................................................................................................... 11\n加载脚本 ...................................................................................................... 11\n使用ng-app 声明Angular 的边界 ................................................................ 12\nModel View Controller ........................................................................................ 12\n模板和数据绑定 .................................................................................................. 15\n显示文本 ...................................................................................................... 16\n表单输入 ...................................................................................................... 16\n浅谈非入侵式JavaScript .............................................................................. 19\n列表、表格以及其他迭代型元素 ................................................................. 22\n隐藏和显示 .................................................................................................. 24\nCSS 类和样式 ............................................................................................... 25\n反思src 和href 属性 .................................................................................... 27\n表达式 .......................................................................................................... 28\n区分UI 和控制器的职责 .............................................................................. 28\n利用$scope 暴露模型数据 ........................................................................... 29\n使用$watch 监控数据模型的变化 ............................................................... 30\nwatch() 中的性能注意事项 ........................................................................... 33\n使用Module（模块）组织依赖关系 .................................................................. 35\n我需要多少个模块呢 .................................................................................... 38\n使用过滤器格式化数据 ....................................................................................... 39\n使用路由和$location 切换视图 .......................................................................... 40\nindex.html ..................................................................................................... 41\nlist.html ........................................................................................................ 42\ndetail.html .................................................................................................... 42\ncontrollers.js ................................................................................................. 42\n与服务器交互 ..................................................................................................... 43\n使用指令修改DOM ............................................................................................ 45\nindex.html ..................................................................................................... 46\ncontrollers.js ................................................................................................. 46\n校验用户输入 ..................................................................................................... 47\n继续前进 ............................................................................................................. 48\n第3 章 使用AngularJS 进行开发 .................................49\n项目结构 ............................................................................................................. 49\n工具 .................................................................................................................... 52\n各种IDE ...................................................................................................... 52\n运行你的应用 ..................................................................................................... 53\n使用Yeoman ................................................................................................ 53\n不使用Yeoman ............................................................................................. 54\nAngularJS 下的测试 ............................................................................................ 54\nKarma ........................................................................................................... 55\n单元测试 ............................................................................................................. 57\n端到端\/ 集成测试 ............................................................................................... 58\n编译 .................................................................................................................... 60\n其他好用的工具 .................................................................................................. 62\n调试 .............................................................................................................. 62\nBatarang ....................................................................................................... 62\nYeoman ：优化你的工作流程 .............................................................................. 65\n安装Yeoman ................................................................................................ 66\n运行服务器 .................................................................................................. 66\n添加新的路由、视图和控制器 ..................................................................... 66\n关于测试 ...................................................................................................... 67\n构建项目 ...................................................................................................... 67\n与RequireJS 集成 ............................................................................................... 68\n第4 章 一款AngularJS 应用剖析 .................................77\n应用 .................................................................................................................... 77\n模型、控制器和模板之间的关系 ........................................................................ 78\n模型 .................................................................................................................... 79\n控制器、指令及服务 .......................................................................................... 80\n服务 .............................................................................................................. 80\n指令 .............................................................................................................. 84\n控制器 .......................................................................................................... 86\n模板 .................................................................................................................... 90\n测试 .................................................................................................................... 96\n单元测试 ...................................................................................................... 96\n场景测试 .................................................................................................... 100\n第5 章 与服务器交互 .................................................101\n利用$http 进行通信 .......................................................................................... 101\n进一步配置请求 ......................................................................................... 103\n设置HTTP 头 ............................................................................................. 104\n缓存响应 .................................................................................................... 105\n转换请求和响应 ......................................................................................... 106\n单元测试 ........................................................................................................... 107\n使用RESTful 资源 ............................................................................................ 108\n声明 ............................................................................................................ 111\n自定义方法 ................................................................................................ 111\n别用回调！（除非你真的需要它们） ......................................................... 112\n简化服务端操作 ......................................................................................... 112\nngResource 单元测试 ................................................................................. 113\n$q 和Promise .................................................................................................... 114\n拦截响应 ........................................................................................................... 115\n安全性措施 ....................................................................................................... 116\nJSON 漏洞 .................................................................................................. 116\nXSRF .......................................................................................................... 117\n第6 章 指令 ..............................................................119\n指令和HTML 校验 ........................................................................................... 119\nAPI 概览 ........................................................................................................... 120\n为你的指令命名 ......................................................................................... 121\n用来定义指令的对象 .................................................................................. 122\n内嵌 ............................................................................................................ 126\ncompile 和link 函数 ................................................................................... 126\n作用域 ........................................................................................................ 128\n操作DOM 元素 .......................................................................................... 132\n控制器 ........................................................................................................ 134\n继续前进 ........................................................................................................... 137\n第7 章 其他注意点 ....................................................139\n$location ........................................................................................................... 139\nHTML5 模式和Hashbang 模式 .................................................................. 142\nAngularJS Module 类的方法 ............................................................................. 145\nMain 方法在哪里 ........................................................................................ 145\n加载和依赖 ................................................................................................ 146\n快捷方法 .................................................................................................... 146\n使用$on、$emit 和$broadcast 在作用域之间进行交互 ................................... 149\nCookies ............................................................................................................. 150\n国际化和本地化 ................................................................................................ 151\n在AngularJS 里面应该怎么做 ................................................................... 152\n怎样才能让一切运行起来呢 ...................................................................... 152\n常见问题 .................................................................................................... 153\nHTML 无害化和Sanitize 模块 .......................................................................... 153\nLinky .......................................................................................................... 155\n第8 章 速查和技巧 ....................................................157\n封装jQuery Datepicker ..................................................................................... 157\nng-model .................................................................................................... 159\n绑定select .................................................................................................. 159\n调用select .................................................................................................. 159\n例子中的其他内容 ..................................................................................... 160\nTeams List 应用：过滤器和控制器的交互 ........................................................ 161\n搜索框 ........................................................................................................ 165\n下拉框 ........................................................................................................ 165\n复选框 ........................................................................................................ 165\n迭代器 ........................................................................................................ 165\nAngularJS 中的文件上传 .................................................................................. 166\n使用Socket.IO .................................................................................................. 169\n简单的分页服务 ................................................................................................ 172\n与服务端协作及登录 ........................................................................................ 175\n结论 .................................................................................................................. 179\n索引 ...........................................................................181","pages":"187","images":{"small":"http:\/\/img3.douban.com\/spic\/s28011614.jpg","large":"http:\/\/img3.douban.com\/lpic\/s28011614.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s28011614.jpg"},"alt":"http:\/\/book.douban.com\/subject\/25752512\/","id":"25752512","publisher":"电子工业出版社","isbn10":"7121215748","isbn13":"9787121215742","title":"用AngularJS开发下一代Web应用","url":"http:\/\/api.douban.com\/v2\/book\/25752512","alt_title":"AngularJS","author_intro":"Brad Green是Google公司AngularJS项目的技术经理。他同时还直接负责可访问性和技术支持方面的工作。\nShyam Seshadri是Fundoo Solutions公司的老板兼CEO，同时经营AngularJS商店，并且致力于为印度市场提供创造性和有趣的产品。","summary":"AngularJS是一款来自Google的前端JS框架，它的核心特性有：MVC、双向数据绑定、指令和语义化标签、模块化工具、依赖注入、HTML模板，以及对常用工具的封装，例如$http、$cookies、$location等。AngularJS框架的体积非常小，但是设计理念和功能却非常强大，值得前端开发者深入学习。\n本书对AngularJS框架的核心特性做了全面的介绍，包括常用的开发工具和开发环境。作为国内第一本关于AngularJS的书籍，本书是学习AngularJS的必备入门工具。","series":{"id":"697","title":"博文视点O'reilly系列"},"price":"CNY 55.00"},"book_id":"25752512","id":930023947},{"status":"wish","updated":"2015-06-09 21:08:51","user_id":"129154019","tags":["MyWish","编程","node.js"],"book":{"rating":{"max":10,"numRaters":360,"average":"8.7","min":0},"subtitle":"","author":["朴灵"],"pubdate":"2013-12-1","tags":[{"count":489,"name":"node.js","title":"node.js"},{"count":269,"name":"JavaScript","title":"JavaScript"},{"count":120,"name":"编程","title":"编程"},{"count":104,"name":"Web","title":"Web"},{"count":94,"name":"Node.js","title":"Node.js"},{"count":81,"name":"计算机","title":"计算机"},{"count":59,"name":"nodejs","title":"nodejs"},{"count":48,"name":"技术","title":"技术"}],"origin_title":"","image":"http:\/\/img4.douban.com\/mpic\/s27269296.jpg","binding":"平装","translator":[],"catalog":"第1章　Node简介　　1\n1.1 　Node的诞生历程　　1\n1.2 　Node的命名与起源　　1\n1.2.1 　为什么是JavaScript　　2\n1.2.2 　为什么叫Node　　2\n1.3 　Node给JavaScript带来的意义　　2\n1.4 　Node的特点　　4\n1.4.1 　异步I\/O　　4\n1.4.2 　事件与回调函数　　6\n1.4.3 　单线程　　7\n1.4.4 　跨平台　　7\n1.5 　Node的应用场景　　8\n1.5.1 　I\/O密集型　　8\n1.5.2 　是否不擅长CPU密集型业务　　8\n1.5.3 　与遗留系统和平共处　　10\n1.5.4 　分布式应用　　10\n1.6 　Node的使用者　　10\n1.7 　参考资源　　11\n第2章　模块机制　　12\n2.1 　CommonJS规范　　13\n2.1.1 　CommonJS的出发点　　13\n2.1.2 　CommonJS的模块规范　　14\n2.2 　Node的模块实现　　15\n2.2.1 　优先从缓存加载　　16\n2.2.2 　路径分析和文件定位　　16\n2.2.3 　模块编译　　18\n2.3 　核心模块　　20\n2.3.1 　JavaScript核心模块的编译过程　　21\n2.3.2 　C\/C++核心模块的编译过程　　22\n2.3.3 　核心模块的引入流程　　25\n2.3.4 　编写核心模块　　25\n2.4 　C\/C++扩展模块　　27\n2.4.1 　前提条件　　28\n2.4.2 　C\/C++扩展模块的编写　　29\n2.4.3 　C\/C++扩展模块的编译　　30\n2.4.4 　C\/C++扩展模块的加载　　31\n2.5 　模块调用栈　　32\n2.6 　包与NPM　　33\n2.6.1 　包结构　　34\n2.6.2 　包描述文件与NPM　　34\n2.6.3 　NPM常用功能　　37\n2.6.4 　局域NPM　　42\n2.6.5 　NPM潜在问题　　43\n2.7 　前后端共用模块　　44\n2.7.1 　模块的侧重点　　44\n2.7.2 　AMD规范　　44\n2.7.3 　CMD规范　　45\n2.7.4 　兼容多种模块规范　　45\n2.8 　总结　　46\n2.9 　参考资源　　46\n第3章　异步I\/O　　47\n3.1 　为什么要异步I\/O　　47\n3.1.1 　用户体验　　48\n3.1.2 　资源分配　　49\n3.2 　异步I\/O实现现状　　50\n3.2.1 　异步I\/O与非阻塞I\/O　　50\n3.2.2 　理想的非阻塞异步I\/O　　54\n3.2.3 　现实的异步I\/O　　54\n3.3 　Node的异步I\/O　　56\n3.3.1 　事件循环　　56\n3.3.2 　观察者　　56\n3.3.3 　请求对象　　57\n3.3.4 　执行回调　　59\n3.3.5 　小结　　60\n3.4 　非I\/O的异步API　　60\n3.4.1 　定时器　　60\n3.4.2 　process.nextTick()　　61\n3.4.3 　setImmediate()　　62\n3.5 　事件驱动与高性能服务器　　63\n3.6 　总结　　65\n3.7 　参考资源　　65\n第4章　异步编程　　66\n4.1 　函数式编程　　66\n4.1.1 　高阶函数　　66\n4.1.2 　偏函数用法　　67\n4.2 　异步编程的优势与难点　　68\n4.2.1 　优势　　69\n4.2.2 　难点　　70\n4.3 　异步编程解决方案　　74\n4.3.1 　事件发布\/订阅模式　　74\n4.3.2 　Promise\/Deferred模式　　82\n4.3.3 　流程控制库　　93\n4.4 　异步并发控制　　105\n4.4.1 　bagpipe的解决方案　　105\n4.4.2 　async的解决方案　　109\n4.5 　总结　　110\n4.6 　参考资源　　110\n第5章　内存控制　　111\n5.1 　V8的垃圾回收机制与内存限制　　111\n5.1.1 　Node与V8　　112\n5.1.2 　V8的内存限制　　112\n5.1.3 　V8的对象分配　　112\n5.1.4 　V8的垃圾回收机制　　113\n5.1.5 　查看垃圾回收日志　　119\n5.2 　高效使用内存　　121\n5.2.1 　作用域　　121\n5.2.2 　闭包　　123\n5.2.3 　小结　　124\n5.3 　内存指标　　124\n5.3.1 　查看内存使用情况　　124\n5.3.2 　堆外内存　　126\n5.3.3 　小结　　127\n5.4 　内存泄漏　　127\n5.4.1 　慎将内存当做缓存　　127\n5.4.2 　关注队列状态　　130\n5.5 　内存泄漏排查　　130\n5.5.1 　node-heapdump　　131\n5.5.2 　node-memwatch　　132\n5.5.3 　小结　　135\n5.6 　大内存应用　　135\n5.7 　总结　　136\n5.8 　参考资源　　136\n第6章 　理解Buffer　　137\n6.1 　Buffer结构　　137\n6.1.1 　模块结构　　137\n6.1.2 　Buffer对象　　138\n6.1.3 　Buffer内存分配　　139\n6.2 　Buffer的转换　　141\n6.2.1 　字符串转Buffer　　141\n6.2.2 　Buffer转字符串　　142\n6.2.3 　Buffer不支持的编码类型　　142\n6.3 　Buffer的拼接　　143\n6.3.1 　乱码是如何产生的　　144\n6.3.2 　setEncoding()与string_decoder()　　144\n6.3.3 　正确拼接Buffer　　145\n6.4 　Buffer与性能　　146\n6.5 　总结　　149\n6.6 　参考资源　　149\n第7章　网络编程　　150\n7.1 　构建TCP服务　　150\n7.1.1 　TCP　　150\n7.1.2 　创建TCP服务器端　　151\n7.1.3 　TCP服务的事件　　153\n7.2 　构建UDP服务　　154\n7.2.1 　创建UDP套接字　　154\n7.2.2 　创建UDP服务器端　　154\n7.2.3 　创建UDP客户端　　155\n7.2.4 　UDP套接字事件　　155\n7.3 　构建HTTP服务　　155\n7.3.1 　HTTP　　156\n7.3.2 　http模块　　157\n7.3.3 　HTTP客户端　　161\n7.4 　构建WebSocket服务　　163\n7.4.1 　WebSocket握手　　164\n7.4.2 　WebSocket数据传输　　167\n7.4.3 　小结　　169\n7.5 　网络服务与安全　　169\n7.5.1 　TLS\/SSL　　170\n7.5.2 　TLS服务　　172\n7.5.3 　HTTPS服务　　173\n7.6 　总结　　175\n7.7 　参考资源　　176\n第8章　构建Web应用　　177\n8.1 　基础功能　　177\n8.1.1 　请求方法　　178\n8.1.2 　路径解析　　179\n8.1.3 　查询字符串　　180\n8.1.4 　Cookie　　181\n8.1.5 　Session　　184\n8.1.6 　缓存　　190\n8.1.7 　Basic认证　　193\n8.2 　数据上传　　195\n8.2.1 　表单数据　　195\n8.2.2 　其他格式　　196\n8.2.3 　附件上传　　197\n8.2.4 　数据上传与安全　　199\n8.3 　路由解析　　201\n8.3.1 　文件路径型　　202\n8.3.2 　MVC　　202\n8.3.3 　RESTful　　207\n8.4 　中间件　　210\n8.4.1 　异常处理　　214\n8.4.2 　中间件与性能　　215\n8.4.3 　小结　　216\n8.5 　页面渲染　　217\n8.5.1 　内容响应　　217\n8.5.2 　视图渲染　　219\n8.5.3 　模板　　220\n8.5.4 　Bigpipe　　231\n8.6 　总结　　235\n8.7 　参考资源　　235\n第9章　玩转进程　　236\n9.1 　服务模型的变迁　　236\n9.1.1 　石器时代：同步　　236\n9.1.2 　青铜时代：复制进程　　237\n9.1.3 　白银时代：多线程　　237\n9.1.4 　黄金时代：事件驱动　　237\n9.2 　多进程架构　　238\n9.2.1 　创建子进程　　239\n9.2.2 　进程间通信　　240\n9.2.3 　句柄传递　　242\n9.2.4 　小结　　247\n9.3 　集群稳定之路　　248\n9.3.1 　进程事件　　248\n9.3.2 　自动重启　　249\n9.3.3 　负载均衡　　254\n9.3.4 　状态共享　　255\n9.4 　Cluster模块　　257\n9.4.1 　Cluster工作原理　　258\n9.4.2 　Cluster事件　　259\n9.5 　总结　　259\n9.6 　参考资源　　260\n第10章　测试　　261\n10.1 　单元测试　　261\n10.1.1 　单元测试的意义　　261\n10.1.2 　单元测试介绍　　263\n10.1.3 　工程化与自动化　　276\n10.1.4 　小结　　277\n10.2 　性能测试　　278\n10.2.1 　基准测试　　278\n10.2.2 　压力测试　　280\n10.2.3 　基准测试驱动开发　　281\n10.2.4 　测试数据与业务数据的转换　　283\n10.3 　总结　　284\n10.4 　参考资源　　284\n第11章　产品化　　285\n11.1 　项目工程化　　285\n11.1.1 　目录结构　　285\n11.1.2 　构建工具　　286\n11.1.3 　编码规范　　289\n11.1.4 　代码审查　　289\n11.2 　部署流程　　290\n11.2.1 　部署环境　　291\n11.2.2 　部署操作　　291\n11.3 　性能　　293\n11.3.1 　动静分离　　293\n11.3.2 　启用缓存　　294\n11.3.3 　多进程架构　　294\n11.3.4 　读写分离　　295\n11.4 　日志　　295\n11.4.1 　访问日志　　295\n11.4.2 　异常日志　　296\n11.4.3 　日志与数据库　　299\n11.4.4 　分割日志　　299\n11.4.5 　小结　　299\n11.5 　监控报警　　299\n11.5.1 　监控　　300\n11.5.2 　报警的实现　　302\n11.5.3 　监控系统的稳定性　　303\n11.6 　稳定性　　303\n11.7 　异构共存　　304\n11.8 　总结　　305\n11.9 　参考资源　　305\n附录A 　安装Node　　306\nA.1 　Windows系统下的Node安装　　306\nA.2 　Mac系统下Node的安装　　307\nA.3 　Linux系统下Node的安装　　308\nA.4 　总结　　309\nA.5 　参考资源　　309\n附录B 　调试Node　　310\nB.1 　Debugger　　310\nB.2 　Node Inspector　　311\nB.2.1 　安装Node Inspector　　312\nB.2.2 　错误堆栈　　312\nB.3 　总结　　313\n附录C 　Node编码规范　　314\nC.1 　根源　　314\nC.2 　编码规范　　315\nC.2.1 　空格与格式　　315\nC.2.2 　命名规范　　317\nC.2.3 　比较操作　　318\nC.2.4 　字面量　　318\nC.2.5 　作用域　　318\nC.2.6 　数组与对象　　319\nC.2.7 　异步　　320\nC.2.8 　类与模块　　320\nC.2.9 　注解规范　　321\nC.3 　最佳实践　　321\nC.3.1 　冲突的解决原则　　321\nC.3.2 　给编辑器设置检测工具　　321\nC.3.3 　版本控制中的hook　　322\nC.3.4 　持续集成　　322\nC.4 　总结　　322\nC.5 　参考资源　　323\n附录D 　搭建局域NPM仓库　　324\nD.1 　NPM仓库的安装　　325\nD.1.1 　安装Erlang和CouchDB　　325\nD.1.2 　搭建NPM仓库　　326\nD.2 　高阶应用　　328\nD.2.1 　镜像仓库　　328\nD.2.2 　私有模块应用　　328\nD.2.3 　纯私有仓库　　329\nD.3 　总结　　331\nD.4 　参考资源　　332","pages":"332","images":{"small":"http:\/\/img4.douban.com\/spic\/s27269296.jpg","large":"http:\/\/img4.douban.com\/lpic\/s27269296.jpg","medium":"http:\/\/img4.douban.com\/mpic\/s27269296.jpg"},"alt":"http:\/\/book.douban.com\/subject\/25768396\/","id":"25768396","publisher":"人民邮电出版社","isbn10":"7115335508","isbn13":"9787115335500","title":"深入浅出Node.js","url":"http:\/\/api.douban.com\/v2\/book\/25768396","alt_title":"","author_intro":"朴灵\n真名田永强，文艺型码农，就职于阿里巴巴数据平台，资深工程师，Node.js布道者，写了多篇文章介绍Node.js的细节。活跃于CNode社区，是线下会议NodeParty的组织者和JSConf China（沪JS和京JS）的组织者之一。热爱开源，多个Node.js模块的作者。个人GitHub地址：http:\/\/github.com\/JacksonTian。叩首问路，码梦为生。","summary":"本书从不同的视角介绍了 Node 内在的特点和结构。由首章Node 介绍为索引，涉及Node 的各个方面，主要内容包含模块机制的揭示、异步I\/O 实现原理的展现、异步编程的探讨、内存控制的介绍、二进制数据Buffer 的细节、Node 中的网络编程基础、Node 中的Web 开发、进程间的消息传递、Node 测试以及通过Node 构建产品需要的注意事项。最后的附录介绍了Node 的安装、调试、编码规范和NPM 仓库等事宜。\n本书适合想深入了解 Node 的人员阅读。","series":{"id":"13000","title":"图灵原创"},"price":"CNY 69.00"},"book_id":"25768396","id":930023799},{"status":"wish","updated":"2015-06-09 21:07:36","user_id":"129154019","tags":["编程","MyWish"],"book":{"rating":{"max":10,"numRaters":1120,"average":"9.1","min":0},"subtitle":"","author":["Douglas Crockford"],"pubdate":"2009年","tags":[{"count":1455,"name":"JavaScript","title":"JavaScript"},{"count":494,"name":"Web前端开发","title":"Web前端开发"},{"count":185,"name":"O'Reilly","title":"O'Reilly"},{"count":176,"name":"web开发","title":"web开发"},{"count":173,"name":"编程","title":"编程"},{"count":141,"name":"计算机","title":"计算机"},{"count":134,"name":"web","title":"web"},{"count":116,"name":"javacript","title":"javacript"}],"origin_title":"","image":"http:\/\/img3.douban.com\/mpic\/s3651235.jpg","binding":"平装","translator":["赵泽欣","鄢学鹍"],"catalog":"","pages":"155","images":{"small":"http:\/\/img3.douban.com\/spic\/s3651235.jpg","large":"http:\/\/img3.douban.com\/lpic\/s3651235.jpg","medium":"http:\/\/img3.douban.com\/mpic\/s3651235.jpg"},"alt":"http:\/\/book.douban.com\/subject\/3590768\/","id":"3590768","publisher":"电子工业出版社","isbn10":"7121084376","isbn13":"9787121084379","title":"JavaScript语言精粹","url":"http:\/\/api.douban.com\/v2\/book\/3590768","alt_title":"JavaScript: The Good Parts","author_intro":"Douglas Crockford是一名来自Yahoo!的资深JavaScript架构师，以创造和维护JSON (JavaScriptObject Notation) 格式而为大家所熟知。他定期在各类会议上发表有关高级JavaScript的主题演讲。","summary":"本书通过对JavaScript语言的分析，甄别出好的和坏的特性，从而提取出相对这门语言的整体而言具有更好的可靠性、可读性和可维护性的JavaScript的子集，以便你能用它创建真正可扩展的和高效的代码。\n雅虎资深JavaScript架构师Douglas Crockford倾力之作。\n向读者介绍如何运用JavaScript创建真正可扩展的和高效的代码。","series":{"id":"697","title":"博文视点O'reilly系列"},"price":"35.00"},"book_id":"3590768","id":930023447}]}